#%RAML 0.8
---
title: Comet Server
version: v1

/account:
  /login:
    post:
      description: logs in an User with provided credentials and returns a session token.
      body:
        application/json:
          example: |
                   {
                    "email":"test@test.com",
                    "password":"testtest"
                   }
      responses:
        200:
          description: OK
          body:
            application/json:
              example: |
                      {
                        "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjYsImVtYWlsIjoidGVzdEB0ZXN0LmNvbSIsImFsaWFzIjoidGVzdF9uYW1ldGVzdF9sYXN0X25hbWUiLCJleHAiOjE0NDMxNTI0ODcsImlhdCI6MTQ0MDU2MDQ4N30.b27aiyshkp8f1XbpMoaL57s_OSASmf8ZPHt0VVQN6yg"
                      }

  /logout:
    post:
      description: Destroy currently logged User's session
      responses:
        302:

  /confirm:
    post:
      description: Allows User Account confirmation with token previously sent via email.
      body:
        application/json:
          example: |
                   {
                    "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjUsImFjdGlvbiI6InJlY292ZXIiLCJleHAiOjE0NDA5MDA1NjUsImlhdCI6MTQ0MDg5OTM2NX0.BcimZBODaEjKclxkbQr4nICVZpvqzbweEGNZ_68G_dw"
                   }
      responses:
        200:

    /token:
      post:
        description: Resends User's Account confirmation link via email.
        headers:
          Authorization:
           description: |
             Token returned by login service to check if currently logged User is authorized to perform this action.
           type: string
           required: true
           example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
        responses:
          200:

  /reopen:
    post:
      description: Allows User to reopen his Comet Account, setting a new password. Token previously retrieved from /reopen/token
      body:
        application/json:
          example: |
                   {
                    "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjUsImFjdGlvbiI6InJlY292ZXIiLCJleHAiOjE0NDA5MDA1NjUsImlhdCI6MTQ0MDg5OTM2NX0.BcimZBODaEjKclxkbQr4nICVZpvqzbweEGNZ_68G_dw",
                    "newpassword":"the_new_password"
                   }
      responses:
        200:

    /token:
      post:
        description: User gets an email with a token to reopen its account.
        body:
          application/json:
            example: |
                     {
                      "email":"test@test.com"
                     }
        responses:
          200:

  /password:
    /token:
      post:
        description: Sends password recovery token to User's email account, if account exists and is confirmed.
        body:
          application/json:
            example: |
                     {
                      "email":"test@test.com"
                     }
        responses:
          200:

    /recover:
      post:
        description: Sets new password to User account if provided token is valid.
        body:
          application/json:
            example: |
                     {
                     "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjUsImFjdGlvbiI6InJlY292ZXIiLCJleHAiOjE0NDA5NTY4MDcsImlhdCI6MTQ0MDk1NTYwN30.F9MaUvOQY8ciz86IuUQq89jFKrq5u_LXpGEUbgPKahY",
                     "newpassword":"the_new_password"
                     }
        responses:
          200:

    /renew:
      post:
        description: Sets new password for currently logged user, if old password is correct.
        headers:
          Authorization:
           description: |
             Token returned by login service to check user is authorized to perform this action.
           type: string
           required: true
           example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
        body:
          application/json:
            example: |
                     {
                      "oldpassword":"the_old_password",
                      "newpassword":"the_new_password"
                     }
        responses:
          200:

/user:
  post:
    description: Create new User Account.
    body:
      application/json:
        example: |
                 {
                  "firstName":"test_name",
                  "lastName":"test_last_name",
                  "email":"test@test.com",
                  "password":"test_pass"
                 }
    responses:
      200:
        description:
        body:
          application/json:
            example: |
                    {
                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjYsImVtYWlsIjoidGVzdEB0ZXN0LmNvbSIsImFsaWFzIjoidGVzdF9uYW1ldGVzdF9sYXN0X25hbWUiLCJleHAiOjE0NDMxNTI0ODcsImlhdCI6MTQ0MDU2MDQ4N30.b27aiyshkp8f1XbpMoaL57s_OSASmf8ZPHt0VVQN6yg"
                    }
  get:
    description: Get currently logged User's full Account information.
    headers:
      Authorization:
       description: |
         Token returned by login service to check if currently logged User is authorized to perform this action.
       type: string
       required: true
       example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
    responses:
      200:
        description:
        body:
          application/json:
            example: |
                    {
                      "user": {
                        "id": 1,
                        "firstName": "test",
                        "lastName": "test",
                        "alias": "testtest",
                        "email": "test@test.com",
                        "profilePicture": null,
                        "confirmed": "true"
                      }
                    }

  put:
    description: Update currently logged User's Account information.
    headers:
      Authorization:
       description: |
         Token returned by login service to check if currently logged User is authorized to perform this action.
       type: string
       required: true
       example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
    body:
      application/json:
        example: |
                 {
                  "firstName":"test_name",
                  "lastName":"test_last_name",
                  "alias":"the best alias"
                 }
    responses:
      200:
        description: OK
        body:
          application/json:
            example: |
                    {
                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjYsImVtYWlsIjoidGVzdEB0ZXN0LmNvbSIsImFsaWFzIjoidGVzdF9uYW1ldGVzdF9sYXN0X25hbWUiLCJleHAiOjE0NDMxNTI0ODcsImlhdCI6MTQ0MDU2MDQ4N30.b27aiyshkp8f1XbpMoaL57s_OSASmf8ZPHt0VVQN6yg"
                    }

  delete:
    description: Delete currently logged User's Account.
    headers:
      Authorization:
       description: |
         Token returned by login service to check if currently logged User is authorized to perform this action.
       type: string
       required: true
       example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
    body:
      application/json:
        example: |
                 {
                  "password":"test_pass"
                 }
    responses:
      302:

/project:
  post:
    description: Create new User Project and invite members, if provided and valid.
    headers:
      Authorization:
       description: |
         Token returned by login service to check if currently logged User is authorized to perform this action.
       type: string
       required: true
       example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI

    body:
      application/json:
        example: |
                {
                  "name": "the_project_name",
                  "description": "the_project_description",
                  "members": [
                    {
                      "address": "jsaucedo.dev@gmail.com"
                    },
                    {
                      "address": "juan.ignacio.saucedo@gmail.com"
                    },
                    {
                      "address": "juan.ignacio.saucedo@gmail"
                    }
                  ]
                }
    responses:
      200:
        description:
        body:
          application/json:
            example: |
              {
                "id": 33,
                "name": "the_project_name",
                "description": "the_project_desc",
                "createdAt": "2015-09-25T00:25:55.469Z",
                "isOwner": true,
                "state": "C",
                "members": [
                  {
                    "id": 2,
                    "email": "themail@gmail.com",
                    "profilePicture": "/static/0.33087815903127193juavatar.png",
                    "firstName": "first_name",
                    "lastName": "last_name",
                    "alias": "alias",
                    "createdAt": "2015-09-15T04:13:54.564Z"
                  }
                ],
                "integrations": []
              }
  get:
    description: Get all currently logged User Project's information. Active Projects, showing first the most recently created.
    headers:
      Authorization:
       description: |
         Token returned by login service to check if currently logged User is authorized to perform this action.
       type: string
       required: true
       example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI

    responses:
      200:
        description:
        body:
          application/json:
            example: |
                      [
                        {
                          "id": 33,
                          "name": "the_project_name",
                          "description": "the_project_desc",
                          "createdAt": "2015-09-25T00:25:55.469Z",
                          "isOwner": true,
                          "state": "C",
                          "members": [
                            {
                              "id": 2,
                              "email": "themail@gmail.com",
                              "profilePicture": "/static/0.33087815903127193juavatar.png",
                              "firstName": "first_name",
                              "lastName": "last_name",
                              "alias": "alias",
                              "createdAt": "2015-09-15T04:13:54.564Z"
                            }
                          ],
                          "integrations": []
                        },
                        {
                          "id": 34,
                          "name": "the_project_name",
                          "description": "the_project_desc",
                          "createdAt": "2015-09-25T00:25:55.469Z",
                          "isOwner": true,
                          "state": "C",
                          "members": [
                            {
                              "id": 2,
                              "email": "themail@gmail.com",
                              "profilePicture": "/static/0.33087815903127193juavatar.png",
                              "firstName": "first_name",
                              "lastName": "last_name",
                              "alias": "alias",
                              "createdAt": "2015-09-15T04:13:54.564Z"
                            }
                          ],
                          "integrations": []
                        }
                      ]

  /{id}:
    get:
      description:  Get project's information.
      headers:
        Authorization:
         description: |
           Token returned by login service to check if currently logged User is authorized to perform this action.
         type: string
         required: true
         example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI

      responses:
        200:
          description:
          body:
            application/json:
              example: |
                {
                  "id": 33,
                  "name": "the_project_name",
                  "description": "the_project_desc",
                  "createdAt": "2015-09-25T00:25:55.469Z",
                  "isOwner": true,
                  "state": "C",
                  "members": [
                    {
                      "id": 2,
                      "email": "themail@gmail.com",
                      "profilePicture": "/static/0.33087815903127193juavatar.png",
                      "firstName": "first_name",
                      "lastName": "last_name",
                      "alias": "alias",
                      "createdAt": "2015-09-15T04:13:54.564Z"
                    }
                  ],
                  "integrations": []
                }
    put:
      description: Update a Project of currently logged User ownership.
      headers:
        Authorization:
         description: |
           Token returned by login service to check if currently logged User is authorized to perform this action.
         type: string
         required: true
         example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
      body:
        application/json:
          example: |
            {
                "name": "the_updated_project_name",
                "description": "the_updated_project_description"
            }
      responses:
        200:
          description:
          body:
            application/json:
              example: |
                {
                  "id": 33,
                  "name": "the_project_name",
                  "description": "the_project_desc",
                  "createdAt": "2015-09-25T00:25:55.469Z",
                  "isOwner": true,
                  "state": "C",
                  "members": [
                    {
                      "id": 2,
                      "email": "themail@gmail.com",
                      "profilePicture": "/static/0.33087815903127193juavatar.png",
                      "firstName": "first_name",
                      "lastName": "last_name",
                      "alias": "alias",
                      "createdAt": "2015-09-15T04:13:54.564Z"
                    }
                  ],
                  "integrations": []
                }

    delete:
      description: Delete a Project of currently logged User ownership.
      headers:
        Authorization:
         description: |
           Token returned by login service to check if currently logged User is authorized to perform this action.
         type: string
         required: true
         example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
      responses:
        200:

    /close:
      delete:
        description: Closes a Project of currently logged User ownership.
        headers:
          Authorization:
           description: |
             Token returned by login service to check if currently logged User is authorized to perform this action.
           type: string
           required: true
           example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
        responses:
          200:

    /members:
      /{member_id}:
        delete:
          description: Allows currently logged User to remove a Project's member if currently logged User is the Project's owner.
          headers:
            Authorization:
             description: |
               Token returned by login service to check if currently logged User is authorized to perform this action.
             type: string
             required: true
             example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
          responses:
            200:

    /invitations:
      post:
        description:  Sends invitations to be part of a project to provided email accounts.
        headers:
          Authorization:
           description: |
             Token returned by login service to check if currently logged User is authorized to perform this action.
           type: string
           required: true
           example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI

        body:
          application/json:
            example: |
                    {
                      "addresses": [
                        {
                          "address": "test1@test1.com"
                        },
                        {
                          "address": "test2@test2.com"
                        }
                      ]
                    }

        responses:
          200:

      /accept:
        post:
          description: Allows currently logged User to accept an invitation to a Project.
          headers:
            Authorization:
             description: |
               Token returned by login service to check if currently logged User is authorized to perform this action.
             type: string
             required: true
             example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjE4LCJlbWFpbCI6ImpAcy5jb20iLCJhbGlhcyI6ImpzIiwiZXhwIjoxNDQzMjAyNjA2LCJpYXQiOjE0NDA2MTA2MDZ9.r3G3_BsRtNJxaCKePgvuesHVgTqHNnWM1ON-XogogJI
          body:
            application/json:
              example: |
                       {
                        "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjUsImFjdGlvbiI6InJlY292ZXIiLCJleHAiOjE0NDA5MDA1NjUsImlhdCI6MTQ0MDg5OTM2NX0.BcimZBODaEjKclxkbQr4nICVZpvqzbweEGNZ_68G_dw"
                       }
          responses:
            200:
#  put:

#/channels:
#  get:
#  post:
#  put:
